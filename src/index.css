@font-face {
  font-family: 'Plex';
  src: url('./static/IBMPlexSans-Regular.woff');
  font-display: swap;
}

@font-face {
  font-family: 'Plex Light';
  src: url('./static/IBMPlexSans-Light.woff');
  font-display: swap;
}

:root {
  --w-max: 1080px;
  --w-xl-max: 1440px;
  --h-nav: 1.5rem;
  --c-bg: rgb(255, 255, 255);
  --c-txt: hsl(0, 0%, 0%);
  --c-txt-alpha: hsl(213, 25%, 65%);
  --c-bg-alpha: rgba(255, 255, 255, 0.25);
  --c-acc: hsl(175, 87%, 40%);
  --c-sel: rgba(13, 191, 176, 0.5);
  --p-side: 1rem;

  --transition-props: 350ms cubic-bezier(0.25, 0, 0, 1);
}

body {
  margin: 0;
  font-family: 'Plex', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
    'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  color: var(--c-txt);
}

::selection {
  color: var(--c-bg);
  background-color: var(--c-sel);
}

.wrapper {
  background-color: var(--c-bg);
  margin-top: calc(var(--h-nav) + var(--p-side) * 2);
  margin-bottom: 6rem;
  will-change: transform;
}

.nav {
  z-index: 99;
  position: fixed;
  height: var(--h-nav);
  top: 0;
  left: 0;
  right: 0;
  margin: var(--p-side);
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.nav > :nth-child(2) {
  /* z-index: 999; */
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

video {
  will-change: opacity, transform;
  transition: opacity 1s ease-out, transform 1s ease-out;
}

figcaption {
  margin: 1rem;
}

.hero-content h1 {
  margin: 0.25rem 0;
  white-space: nowrap;
  will-change: transform;
}

.hero-content a {
  padding: 0 0.5rem;
  color: var(--c-acc);
  transition: color var(--transition-props);
}
.hero-content a:hover {
  color: var(--c-bg);
  transition: color var(--transition-props);
}
.hero-content a::before {
  z-index: -1;
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  height: 1.5px;
  background-color: var(--c-acc);
  transition: height var(--transition-props);
}
.hero-content a:hover::before {
  height: 100%;
  transition: height var(--transition-props);
}

a.external-link {
  display: inline-block;
  cursor: alias;
}
a.external-link {
  text-decoration: underline;
}
a.external-link::after {
  display: inline;
  content: 'â†—';
}

.faded {
  color: var(--c-txt-alpha);
}

@media (max-width: 920px) {
  .home.hero,
  .about.hero {
    min-height: initial;
    padding: calc(var(--p-side) * 2) var(--p-side) var(--p-side);
  }
}
